spring:
  main:
    allow-bean-definition-overriding: true
  datasource:
    name: mybatis_test
    #使用druid连接池
    type: com.alibaba.druid.pool.DruidDataSource
    #druid相关配置
    druid:
      #监控统计拦截的filters
      filters: stat
      driver-class-name: com.mysql.cj.jdbc.Driver
      #配置基本属性
      url: jdbc:mysql://192.168.201.46:3306/venus?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&useSSL=false&zeroDateTimeBehavior=convertToNull
      username: XXX
      password: XXX
      #配置初始化大小/最小/最大
      initial-size: 1
      min-idle: 1
      max-active: 20
      #获取连接等待超时时间
      max-wait: 60000
      #间隔多久进行一次检测，检测需要关闭的空闲连接
      time-between-eviction-runs-millis: 60000
      #一个连接在池中最小生存的时间
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT 'x'
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      #打开PSCache，并指定每个连接上PSCache的大小。oracle设为true，mysql设为false。分库分表较多推荐设置为false
      pool-prepared-statements: false
      max-pool-prepared-statement-per-connection-size: 20

mybatis:
  # 映射文件所在路径
  mapper-locations: classpath:mapper/*.xml


sharding:
  jdbc:
    dataSource:
      names: db-test0,db-test1
      # 配置数据源0
      db-test0:
        type: com.zaxxer.hikari.HikariDataSource
        driverClassName: com.mysql.cj.jdbc.Driver
        jdbcUrl: jdbc:mysql://192.168.201.46:3306/venus?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&useSSL=false&zeroDateTimeBehavior=convertToNull
        username: XXX
        password: XXX
        maxPoolSize: 20
      # 配置数据源1
      db-test1:
        type: com.zaxxer.hikari.HikariDataSource
        driverClassName: com.mysql.cj.jdbc.Driver
        jdbcUrl: jdbc:mysql://192.168.201.46:3306/smf?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&useSSL=false&zeroDateTimeBehavior=convertToNull
        username: XXX
        password: XXX
        maxPoolSize: 20
    config:
      sharding:
        default-data-source-name: db-test0
        default-database-strategy:
          inline:
            sharding-column: order_id
            algorithm-expression: db-test$->{Long.parseLong(order_id.toString().substring(order_id.toString().length()-2,order_id.toString().length()-1))  % 2}
        tables:
          my_order:
            actual-data-nodes: db-test$->{0..1}.my_order_$->{0..15}
            table-strategy:
              inline:
                algorithm-expression: my_order_$->{Long.parseLong(order_id.toString().substring(order_id.toString().length()-15,order_id.toString().length()-1))  % 16}
                sharding-column: order_id
    props:
      sql: # 开启SQL显示，默认值: false，注意：仅配置读写分离时不会打印日志！！！
        show: true